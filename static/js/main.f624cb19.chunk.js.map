{"version":3,"sources":["ExcelReader.js","MakeColumns.js","ImageLoad.js","Review.js","Checkout.js","index.js","types.js"],"names":["ExcelReader","useState","file","setFile","data","setData","setCols","setFinalData","message","setMessage","selectedOption","setSelectedOption","res","a","axios","post","headers","then","Typography","component","variant","align","value","onChange","console","log","options","label","type","className","id","accept","SheetJSFT","e","files","target","Button","color","onClick","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","bookVBA","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","refstr","o","C","decode_range","c","i","name","encode_col","key","make_cols","JSON","stringify","readAsArrayBuffer","CircularProgress","border","width","errorRec","sucessRec","totalRec","responseData","map","TraineeName","StateRegNumber","ErrorDescription","RecordStatus","useStyles","makeStyles","table","minWidth","ImageLoad","classes","pictures","setPictures","finalPictures","setFinalPictures","Fragment","getUploadParams","url","onChangeStatus","status","meta","onSubmit","allFiles","tempAray","index","array","Uint8Array","imgResult","length","push","asyncDataFetch","catch","error","forEach","f","remove","inputContent","extra","reject","styles","dropzoneReject","borderColor","backgroundColor","inputLabel","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","theme","listItem","padding","spacing","total","fontWeight","title","marginTop","Copyright","Link","href","appBar","position","layout","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","Checkout","CssBaseline","AppBar","Toolbar","noWrap","App","state","Component","render","document","getElementById","x","join"],"mappings":"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","file":"static/js/main.f624cb19.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\n import axios from 'axios';\n import base64js from 'base64-js';\n import Typography from '@material-ui/core/Typography';\n import Button from '@material-ui/core/Button';\n import CircularProgress from '@material-ui/core/CircularProgress';\n import Select from 'react-select'\n\nfunction ExcelReader()  {\n  const [file, setFile] = useState();\n  const [imageFile, setImageFile] = useState(\"\");\n  const [newImage, setNewImage] = useState(\"\");\n  const [data, setData] = useState();\n  const [cols, setCols] = useState([]);\n  const [finalData,setFinalData]=useState()\n  const [message,setMessage]=useState()\n  const [selectedOption,setSelectedOption]=useState(null)\n  const options = [\n    { value: 'http://164.100.68.244:8082/APP/api/traineeupload/UploadTrainees/', label: 'Test API URL' },\n    { value: 'http://164.100.213.37/MIS/api/traineeupload/UploadTrainees/', label: 'Production API URL' },\n    \n  ];\n  const handleOptionChange = selectedOption => {\n    setSelectedOption( selectedOption );\n    console.log(`Option selected:`, selectedOption.value);\n  };\n  const handleChange=(e)=> {\n    const files = e.target.files;\n    if (files && files[0]) setFile(files[0]);\n  };\n \n  const handleFile=()=> {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n \n    reader.onload = (e) => {\n      /* Parse data */\n     \n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_json(ws);\n      /* Update state */\n      setData(data)\n      setCols(make_cols(ws['!ref']))\n  \n   setFinalData(JSON.stringify(data, null, 2))\n   \n    };\n \n    if (rABS) {\n      reader.readAsBinaryString(file);\n    } else {\n      reader.readAsArrayBuffer(file);\n    };\n  }\n  const res = async () => {\n    await axios.post(selectedOption,data, {\n   \n   headers:{'content-type': 'application/json', 'username': 'SPIUDL',\n    'password': 'VLuwBawrBSSvmHgOm2Y7HQ==',}\n}).then(res => {\n        // console.log(\"one\",res);\n        // console.log(res.data);\n        setMessage(res)\n      });}\n    \n\n    \n   \n    return (\n      <div>\n         <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n            Upload the excel File  \n            \n          </Typography>\n          <Select\n        value={selectedOption}\n        onChange={handleOptionChange}\n        options={options}\n      />\n      <br/><br/>\n       {selectedOption!= null &&\n        <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={handleChange} />\n       }<br /><br/><br/>\n    {file &&\n        <Button  \n          variant=\"contained\" color=\"primary\"\n          onClick={handleFile} >Process the data</Button>}<br/><br/>\n          {data &&\n          \n          <Button variant=\"contained\" color=\"primary\" onClick={res}>Upload Data</Button>\n          }\n          <br></br><br></br>\n          {data && !message && \n          <CircularProgress />\n          }\n   {message &&\n   <div>\n     {console.log(message)}\n          <table border=\"1\" width=\"100%\">\n            <tbody>\n            <tr><td>Errors: {message.data.errorRec} </td>\n            <td>Success : {message.data.sucessRec} </td>\n            <td>Total : {message.data.totalRec}</td></tr>\n</tbody>            </table>\n            <table border=\"1\" width=\"100%\">\n              <tr><td>Trainee Name</td><td>State Registration No.</td><td>Description</td><td>RecordStatus</td></tr>\n              <tbody>{message.data.responseData.map((result,i)=>(\n<tr>\n  <td>{result.TraineeName}</td>\n   <td>{result.StateRegNumber}</td>\n  <td>{result.ErrorDescription}</td>\n \n  <td>{result.RecordStatus}</td>\n</tr>\n\n\n              ))}\n            </tbody>\n   </table>\n\n   </div>\n  }\n          </div>\n      \n    )\n \n}\n \nexport default ExcelReader;","import XLSX from 'xlsx';\n/* generate an array of column objects */\nexport const make_cols = refstr => {\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\n\treturn o;\n};","import React,{useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ImageUploader from 'react-images-upload';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ImageLoad() {\n   const classes = useStyles();\n   const [pictures, setPictures] = useState([]);\n   const [finalPictures, setFinalPictures] = useState([]);\n   const onDrop = picture => {\n    setPictures([...pictures, picture]);\n  };\n  \n const convertImages=()=> {\n    console.log(\"issues here\")\n    let tempAray=[]\n    const asyncDataFetch = async () => {\n      console.log(pictures)\n        pictures[0].map((files,index)=>{\n       \n         let reader = new FileReader();\n        let file = files;\n       \n        reader.onload= () => {\n            var array = new Uint8Array(reader.result); // read the actual file contents\n                     \n          let i=0;\n    let imgResult=\"\"\n            for(i;i<array.length;i++){\n             imgResult=imgResult+array[i]+\",\";\n            }\n            tempAray.push([files.name,imgResult])\n        }\n        reader.readAsArrayBuffer(file)\n        })\n      }\n       asyncDataFetch()\n          .then(() => {\n            console.log(\"time taking\",tempAray)\n      setFinalPictures(tempAray)      \n          })\n          .catch((error) => {\n            console.log(\"Error getting urls: \" + error);\n           \n          });\n      \n    }\n     const getUploadParams = () => {\n    return { url: 'https://httpbin.org/post' }\n  }\n\n  const handleChangeStatus = ({ meta }, status) => {\n    // console.log(\"status\",status, meta)\n  }\n\n  const handleSubmit = (files, allFiles) => {\n    \n    let tempAray=[]\n    const asyncDataFetch = async () => {\n      console.log(\"check it\",files)\n        files.map((files,index)=>{\n       console.log(files.file)\n         let reader = new FileReader();\n        let file = files.file;\n       \n        reader.onload= () => {\n            var array = new Uint8Array(reader.result); // read the actual file contents\n                     \n          let i=0;\n    let imgResult=\"\"\n            for(i;i<array.length;i++){\n             imgResult=imgResult+array[i]+\",\";\n            }\n            tempAray.push([files.meta.name,imgResult])\n        }\n        reader.readAsArrayBuffer(file)\n        })\n      }\n       asyncDataFetch()\n          .then(() => {\n            console.log(\"time taking\",tempAray)\n            \n            setPictures(tempAray);      \n          })\n          .catch((error) => {\n            console.log(\"Error getting urls: \" + error);\n           \n          });\n\n    allFiles.forEach(f => f.remove())\n  }\n  const showImages=()=>{\n    setFinalPictures(pictures)\n  }\n  return (\n    <React.Fragment>\n     {/* <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={onDrop}\n                imgExtension={[\".jpg\", \".jpeg\", \".png\", \".gif\"]}\n                label=\"10 kb < File size < 200 kb\"\n                maxFileSize={1242880}\n                \n            /> */}\n             <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      accept=\"image/*\"\n      inputContent={(files, extra) => (extra.reject ? 'Image files only' : 'Drag Images')}\n      styles={{\n        dropzoneReject: { borderColor: 'red', backgroundColor: '#DAA' },\n        inputLabel: (files, extra) => (extra.reject ? { color: 'red' } : {}),\n      }}\n    />\n            <br></br><br/>\n           \n            <Button variant=\"contained\" color=\"primary\" onClick={showImages} > Convert </Button>\n            \n           {pictures.length > 0 && finalPictures.length < 1 &&\n<div>After Click Conversion will take time.....\n    <CircularProgress />\n</div>\n}\n\n            <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Image Name</TableCell>\n            <TableCell align=\"left\">Byte value</TableCell>\n{console.log(\"result\",finalPictures)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {finalPictures.map((row,index) => (\n            \n            <TableRow key={row.key}>\n              {console.log(\"check row\",row)}\n              <TableCell component=\"th\" scope=\"row\">\n                {row[0]}\n              </TableCell>\n              <TableCell align=\"left\">\n                {row[1]}\n                </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nconst products = [\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\n  { name: 'Shipping', desc: '', price: 'Free' },\n];\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\nconst payments = [\n  { name: 'Card type', detail: 'Visa' },\n  { name: 'Card holder', detail: 'Mr John Smith' },\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\n  { name: 'Expiry date', detail: '04/2024' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function Review() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {products.map((product) => (\n          <ListItem className={classes.listItem} key={product.name}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>John Smith</Typography>\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Payment details\n          </Typography>\n          <Grid container>\n            {payments.map((payment) => (\n              <React.Fragment key={payment.name}>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.name}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.detail}</Typography>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport ImageLoad from './ImageLoad';\nimport Review from './Review';\nimport ExcelReader from './ExcelReader';\nfunction Copyright() {\n  return (\n    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n     \n      <Link color=\"inherit\" href=\"https://thelivespace.app/profile/amitdabas\">\n        For any queries Click here\n      </Link>{' '}\n    \n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(800 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\n\nexport default function Checkout() {\n  const classes = useStyles();\n  \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n           MIS Data Upload API Integration\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <b>Instructions</b><br/>\n         1. You can upload excel File which includes all the columns as per the required template.<br/>\n         2. Trainee Image column should have the byte array values, if you dont have the byte array values you can\n         convert all images at once using the option given below\n\n        </Paper>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Upload Data  \n            \n          </Typography>\n         \n         \n          <ExcelReader/>\n          <hr/><hr/>\n                     <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              \n            Convert Image to Byte Array\n          </Typography>\n          <ImageLoad/>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\nimport ExcelReader from './ExcelReader';\nimport Checkout from './Checkout.js';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Checkout/>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","const SheetJSFT = [\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\n].map(function(x) { return \".\" + x; }).join(\",\");"],"sourceRoot":""}